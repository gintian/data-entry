<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd	
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<!-- 自动搜索@Component , @Service , @Repository等标注的类 不搜索@Controller的类 -->
	<!-- 自动扫描组件，这里要把web下面的 controller去除，他们是在springMVC-servlet.xml中配置的，如果不去除会影响事务管理的。 -->
	<context:component-scan base-package="org.whale"
		annotation-config="true">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />

	</context:component-scan>

	<bean id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
				<value>classpath:conf.properties</value>
			</list>
		</property>
	</bean>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${user}" />
		<property name="password" value="${password}" />
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${initialSize}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxActive" value="${maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 <property name="poolPreparedStatements" 
			value="${poolPreparedStatements}" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
			value="${maxPoolPreparedStatementPerConnectionSize}" /> -->
		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="${filters}" />
	</bean>

	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
	</bean>

	<bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" />

	<bean id="stringHttpMessageConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter" />
	<bean id="formHttpMessageConverter"
		class="org.springframework.http.converter.FormHttpMessageConverter" />

	<!-- web client mock request -->
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<ref bean="stringHttpMessageConverter" />
				<ref bean="formHttpMessageConverter" />
			</list>
		</property>
	</bean>
	
	<!-- 配置线程池 -->  
	<bean id ="threadPoolTaskExecutor"  class ="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >  
		<property name ="corePoolSize" value ="20" />  
		<property name ="keepAliveSeconds" value ="600" />  
		<property name ="maxPoolSize" value ="100" />  
		<property name ="queueCapacity" value ="200" />  
	</bean> 
	
	<!-- 定义事务管理器（声明式的事务） -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" />
			<tx:method name="update*" />
			<tx:method name="delete*" />
			<tx:method name="do*"/>
			<tx:method name="flow*" />
			<tx:method name="generate*" propagation="SUPPORTS" />
			<tx:method name="bizSendSms*" propagation="REQUIRES_NEW" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:pointcut id="interceptorPointCuts"	expression="(execution(* org.whale..*.service.*.*(..)))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="interceptorPointCuts" />
	</aop:config>

	<bean id="jvmCacheService" class="org.whale.system.cache.impl.JvmCacheService"></bean>

	<bean id="dictCacheService" class="org.whale.system.cache.service.DictCacheService"></bean>

	<bean id="userAuthCacheService" class="org.whale.system.cache.service.UserAuthCacheService"></bean>

	<import resource="scheduler.xml" />
	
	<!-- 短信：阿里云代理配置 -->
	<!-- <bean id="sendUtil" class="org.whale.sms.util.SendUtil">
	    <property name="proxyIp" value="${proxyIp}" />
	    <property name="port" value="${port}" />
	</bean> -->
</beans>

